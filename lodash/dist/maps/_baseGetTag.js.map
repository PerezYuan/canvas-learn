{"version":3,"sources":["_baseGetTag.js"],"names":["nullTag","undefinedTag","symToStringTag","toStringTag","undefined","baseGetTag","value","Object"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAIA,UAAU,eAAd;AAAA,IACIC,eAAe,oBADnB;;AAGA;AACA,IAAIC,iBAAiB,mBAAS,iBAAOC,WAAhB,GAA8BC,SAAnD;;AAEA;;;;;;;AAOA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIA,SAAS,IAAb,EAAmB;AACjB,WAAOA,UAAUF,SAAV,GAAsBH,YAAtB,GAAqCD,OAA5C;AACD;AACD,SAAQE,kBAAkBA,kBAAkBK,OAAOD,KAAP,CAArC,GACH,yBAAUA,KAAV,CADG,GAEH,8BAAeA,KAAf,CAFJ;AAGD;;kBAEcD,U","file":"../_baseGetTag.js","sourcesContent":["import Symbol from './_Symbol.js';\r\nimport getRawTag from './_getRawTag.js';\r\nimport objectToString from './_objectToString.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar nullTag = '[object Null]',\r\n    undefinedTag = '[object Undefined]';\r\n\r\n/** Built-in value references. */\r\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\r\n\r\n/**\r\n * The base implementation of `getTag` without fallbacks for buggy environments.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nfunction baseGetTag(value) {\r\n  if (value == null) {\r\n    return value === undefined ? undefinedTag : nullTag;\r\n  }\r\n  return (symToStringTag && symToStringTag in Object(value))\r\n    ? getRawTag(value)\r\n    : objectToString(value);\r\n}\r\n\r\nexport default baseGetTag;\r\n"]}