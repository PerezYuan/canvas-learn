{"version":3,"sources":["_baseExtremum.js"],"names":["baseExtremum","array","iteratee","comparator","index","length","value","current","computed","undefined","result"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;;;;;;;AAUA,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuCC,UAAvC,EAAmD;AACjD,MAAIC,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASJ,MAAMI,MADnB;;AAGA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIC,QAAQL,MAAMG,KAAN,CAAZ;AAAA,QACIG,UAAUL,SAASI,KAAT,CADd;;AAGA,QAAIC,WAAW,IAAX,KAAoBC,aAAaC,SAAb,GACfF,YAAYA,OAAZ,IAAuB,CAAC,wBAASA,OAAT,CADT,GAEhBJ,WAAWI,OAAX,EAAoBC,QAApB,CAFJ,CAAJ,EAGO;AACL,UAAIA,WAAWD,OAAf;AAAA,UACIG,SAASJ,KADb;AAED;AACF;AACD,SAAOI,MAAP;AACD;;kBAEcV,Y","file":"../_baseExtremum.js","sourcesContent":["import isSymbol from './isSymbol.js';\r\n\r\n/**\r\n * The base implementation of methods like `_.max` and `_.min` which accepts a\r\n * `comparator` to determine the extremum value.\r\n *\r\n * @private\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} iteratee The iteratee invoked per iteration.\r\n * @param {Function} comparator The comparator used to compare values.\r\n * @returns {*} Returns the extremum value.\r\n */\r\nfunction baseExtremum(array, iteratee, comparator) {\r\n  var index = -1,\r\n      length = array.length;\r\n\r\n  while (++index < length) {\r\n    var value = array[index],\r\n        current = iteratee(value);\r\n\r\n    if (current != null && (computed === undefined\r\n          ? (current === current && !isSymbol(current))\r\n          : comparator(current, computed)\r\n        )) {\r\n      var computed = current,\r\n          result = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseExtremum;\r\n"]}